name: 'Docker APK Version'
description: 'Check package version in an alpine docker image'
inputs:
  image:
    description: 'docker image (and tag) to use'
    required: true
    default: ghcr.io/fopina/postfix-relay:latest
  package:
    description: 'apk package to query'
    required: true
    default: postfix
  install:
    description: 'apk add package first to check latest version'
    required: false
outputs:
  version:
    description: "Version"
    value: ${{ steps.version-output.outputs.version }}
runs:
  using: "composite"
  steps:
    - name: Prepare command
      id: command-output
      shell: bash
      if: inputs.install != 'true'
      run: |
        echo "cmd=apk version ${{ inputs.package }}" >> $GITHUB_OUTPUT
    - name: Prepare command (with install)
      id: latest-command-output
      shell: bash
      if: inputs.install == 'true'
      # TODO: using "apk update" + "apk info" would be cleaner/faster BUT "info" lists packages that CONTAIN string, instead of exact match (like apk version)
      run: |
        echo "cmd=apk add ${{ inputs.package }} && apk version ${{ inputs.package }}" >> $GITHUB_OUTPUT

    - name: Get used version
      id: version-output
      shell: bash
      run: |
          TAG=$(docker run --rm \
                            --entrypoint "" \
                            ${{ inputs.image }} \
                            sh -c "${{ steps.command-output.outputs.cmd }}${{ steps.latest-command-output.outputs.cmd }}" | grep ^${{ inputs.package }} | tail -n1 | cut -d ' ' -f1 | sed s/${{ inputs.package }}-//)
          echo version=${TAG} >> $GITHUB_OUTPUT
          echo ${{ inputs.image }} installed version of ${{ inputs.package }} is ${TAG}
